{"id":"962937914340602604","name":"Tablefy","lastUpdateDate":"2021-05-06T01:36:21.083Z","publisherHandle":"kikoherrschaft","publisherImage":"https://s3-alpha.figma.com/profile/52402e91-fb2a-444f-8e52-5e7dab8fa169","publisherId":"25543","publisherName":"Kiko Herrschaft","description":"<p>Export your frames and instances to tabular data (.csv).</p><p><br></p><p>Let's say you manage some tasks on your Figma files and want to export a .csv to filter by status, send it to someone or upload to Google Sheets. Tablefy will help you do just that.</p><p><br></p><h2>How to use it</h2><p>Tablefy relies on your <strong>layers naming</strong> to recognize how to transform your frames / instances to tabular data.</p><p><br></p><p>As an example, you could create a list of instances with the following layer structure and names:</p><p><br></p><p>ðŸ‘‰ Instance named \"<strong>Item</strong>\"</p><p>Group named \"<strong>Column</strong>\"</p><ul><li>Text Layer named \"<strong>Header</strong>\" filled with text \"Name\"</li><li>Text Layer named \"<strong>Value</strong>\" filled with text \"Task 1\"</li></ul><p>Group named \"<strong>Column</strong>\"</p><ul><li>Text Layer named \"<strong>Header</strong>\" filled with text \"Status\"</li><li>Text Layer named \"<strong>Value</strong>\" filled with text \"To do\"</li></ul><p><br></p><p>So, you could open the plugin and set the values:</p><ul><li>Row identifier: \"<strong>Item</strong>\"</li><li>Column Identifier: \"<strong>Column</strong>\"</li><li>Value text layer: \"<strong>Value</strong>\"</li><li>Header text layer: \"<strong>Header</strong>\"</li></ul><p><br></p><p>When you hit Tablefy button, it will generate a .csv with two columns (Name, Status) and as many rows as the frames or instances you selected.</p><p><br></p><p>You can add as many columns as you want! If your frame just have one useful column, you can ignore \"Column Identifier\" and keep it empty.</p><p><br></p><p>It's recommended that you always use instances, since they guarantee each selected frame has always the same layers.</p><p><br></p><h2>Custom columns:</h2><p>You can add custom dynamic columns. Let's say you want to export an url to your frame listed as a row in the csv. You could add a custom column and set its value to \"${url}\". You can use node parameters as well, like ${node-id}, ${node-name}, ${node-x}.</p><p>Available variables:</p><ul><li>${url} - creates an url to the frame</li><li>${index} - adds a counter relative to the frame list position</li><li>${node-prop} - retrieve properties from the figma node object, like \"node-id\", \"node-name\", \"node-x\"</li><li>${predict:\"frameName\", category: \"frameTextLayer\"}</li><li>${layerName} - fetch a layer inside that row with this name and get its text contents</li></ul><p><br></p><h2>Predict columns with Machine Learning</h2><p>Use the \"predict\" variable in a dynamic column to apply a classification automatically using the KNN (K-Nearest Neighbours) algorithm. It finds the nearest frame to the row node and sets a value from a layer of that closer framer.</p><p><br></p><p>This can be really useful if your spacial organization has some meaning that you want to export to the rows. If you have a canvas with titled areas, you could export with your rows which title frame was closer to it.</p><p><br></p><p><strong>An example:</strong></p><p>If you set a custom column value field like: <code>${predict:\"frameName\", category: \"frameTextLayer\"}</code></p><p>For each node (row) we will look at all the frames named \"frameName\", find which one is closer to the node and apply to this column that frame's \"frameTextLayer\" content. </p>","url":"https://www.figma.com/community/plugin/962937914340602604","iconUrl":"https://www.figma.com/community/plugin/962937914340602604/icon","thumbnailUrl":"https://www.figma.com/community/plugin/962937914340602604/thumbnail"}
